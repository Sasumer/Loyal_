@model List<Web.ViewModel.ViewModelOrdenDetalle>

<div class="table-responsive-sm">
    @*Accion, nombre de controlador*@

    <table class="table table-striped">
        <tr>
            <th>
                Producto
            </th>
            <th class="center">
                Ubicacion
            </th>
            @*<th class="center">
                Proveedor
            </th>*@
            <th class="center">
                Cantidad
            </th>
            <th class="right">
                Precio
            </th>

            <th class="right">
                SubTotal
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
    <tr>
        <td>
            @Html.HiddenFor(modelItem => item.Producto.ID)
            @Html.DisplayFor(modelItem => item.Producto.DESCRIPCION)
        </td>


        <td>


            @*<div class="form-group">
                @Html.LabelFor(modelItem => item.Producto.PRODUCTO_UBICACION, htmlAttributes: new { @class = "col-form-label " })
                <div class="col-md-12">
                    @Html.DropDownListFor(modelItem => item.Producto.PRODUCTO_UBICACION, (SelectList)ViewBag.listaUbicaciones, " Seleccione un cliente ", htmlAttributes: new { @class = "mw-100 form-control " })
                    @Html.ValidationMessageFor(modelItem => item.Producto.PRODUCTO_UBICACION, "", new { @class = "text-danger" })
                </div>
            </div>*@


            @*<div class="col-md-12">
                @foreach (var c in item.Producto.PRODUCTO_UBICACION)
                {
                    @Html.DisplayFor(modelItem => c.UBICACION.DESCRIPCION)
                }
            </div>*@
            @*<div class="form-group">*@
            @*@Html.LabelFor(model => model.PRODUCTO_UBICACION, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-12">
                @foreach (var c in item.Producto.PRODUCTO_UBICACION)
                {
                    @*@Html.DisplayFor(modelItem => c.UBICACION.DESCRIPCION)*@
                    @Html.EditorFor(modelItem => c.UBICACION.DESCRIPCION, new
                        {
                            htmlAttributes = new
                            {
                                @class = "form-control changeUbicacion",
                                data_productoid = item.Producto.ID,
                                onchange = "updateUbicacion(this)"
                            }
                        })
                }



                @*@Html.DropDownList("selectedUbicaciones",
                (MultiSelectList)ViewBag.IdUbicaciones,
                new { htmlAttributes = new { @class = "form-control" }, multiple = "multiple" })*@

            </div>
            @*</div>*@
        </td>
        <!--<td>-->
        @*@Html.HiddenFor(modelItem => item.Producto.ID)*@
        @*@Html.DisplayFor(modelItem => item.Producto.PROVEEDOR.)*@
        <!--</td>-->
        @*<td class="center" style="width:1.5em">
             @Html.EditorFor(modelItem => item.Cantidad, new
        {
            htmlAttributes = new
            {
                @class = "form-control changeCantidad", //changeCantidad: clase.
                data_productoid = item.Producto.ID, //data_productoid: variables para html.
                onchange = "updateCantidad(this)" //onchange: Evento que llama una funcion de javascript.
                                                  //This: toda la caja de texto con el valor que indico el usuario
                                                  //updateCantidad: es una vista parcial. En Views/Orden/Index.cshtml **********
            }
        })
        </td>*@
        <td class="center" style="width:1.5em">
            @Html.EditorFor(modelItem => item.Cantidad, new
            {
           htmlAttributes = new
                {
                    @class = "form-control changeCantidad",
           data_libroid = item.Producto.ID,
                    onchange = "updateCantidad(this)"
                }
            })
        </td>

        <td class="right">

            @Html.DisplayFor(modelItem => item.Precio)
        </td>

        <td class="right">
            @Html.DisplayFor(modelItem => item.SubTotal)
        </td>
        <td>
            @Ajax.ActionLink("Eliminar",//Texto para el usuario
                "eliminarLibro",//Acción a llamar
                "Orden",
                new
                {
                    idLibro = item.IdProducto
                },//Parámetros a enviar
                new AjaxOptions
                {
                    UpdateTargetId = "resultadoDetalle",
                    InsertionMode = InsertionMode.Replace,
                    HttpMethod = "GET",
                    OnComplete = "updateCantLibros()" //orden/index
                }, new { @class = "btn btn-primary" }
                )

        </td>
    </tr>
        }

    </table>
</div>
<div class="row">
    <div class="col-lg-5 col-sm-5"></div>
    <div class="col-lg-7 col-sm-5 ml-auto">
        <table class="table table-clear">
            <tbody>
                <tr>
                    <td class="left">
                        <strong>Total</strong>
                    </td>
                    <td class="right">
                        <strong>@(((decimal)Web.ViewModel.Carrito.Instancia.GetTotal()).ToString("C2"))</strong>
                    </td>
                </tr>
            </tbody>
        </table>

    </div>
</div>
